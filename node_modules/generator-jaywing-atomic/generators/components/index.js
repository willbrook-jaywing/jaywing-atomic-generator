//-------------------------------------------------------
//  Generator: Components
//-------------------------------------------------------

var _generator = require('yeoman-generator');
var _inquirer = require('inquirer');
var _fs = require('fs');
var _path = require('path');
var _ = require('lodash');

var _config = require('../../data/config');
var _manager = require('../../lib/components/manager');
var _helper = require('../../lib/components/helper');
var _validator = require('../../lib/components/validator');

//-------------------------
//  Private
//-------------------------

var _action = null;
var _categoryName = null;
var _name = null;
var _description = null;
var _sizeNames = null;
var _moduleAction = null;
var _moduleName = null;

var _promptSelectActionObj = {type: 'list', name: 'action', message: 'Action:', choices: ['Add', 'Delete', new _inquirer.Separator(), 'Back']};
var _promptSelectCategoryNameObj = {type: 'list', name: 'categoryName', message: 'Category:', choices: []};
var _promptInputNameObj = {type: 'input', name: 'name', message : 'Name:'};
var _promptSelectNameObj = {type: 'checkbox', name: 'name', message: 'Components:', choices: []};
var _promptInputDescriptionObj = {type: 'input', name: 'description', message : 'Description:', default: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'};
var _promptSelectSizesObj = {type: 'checkbox', name: 'sizes', message : 'Sizes:', choices: []};
var _promptSelectModuleActionObj = {type: 'list', name: 'moduleAction', message: 'Module:', choices: ['Create New', 'Use Existing', 'None']};
var _promptSelectModuleNameObj = {type: 'list', name: 'moduleName', message: 'Modules:', choices: []};
var _promptConfirmAddObj = {type: 'list', name: 'confirmAdd', message : 'All OK?', choices: ['Yes', 'No']};
var _promptConfirmDeleteObj = {type: 'list', name: 'confirmDelete', message : 'Are you sure?', choices: ['Yes', 'No']};

//-------------------------
//  Yeoman Base Extension
//-------------------------

var baseExtension = {

  _promptSelectAction: function () {
    return this.prompt(_promptSelectActionObj).then(function (answers) {
      _action = answers.action;
      _action == 'Back' ? this.composeWith('jaywing-atomic:app') : this._promptSelectCategoryName();
    }.bind(this));
  },

  _promptSelectCategoryName: function () {
    _promptSelectCategoryNameObj.choices = _manager.getCategoryNames();
    return this.prompt(_promptSelectCategoryNameObj).then(function (answers) {
      _categoryName = answers.categoryName;
      _action == 'Add' ? this._promptInputName() : this._promptSelectName();
    }.bind(this));
  },

  _promptInputName: function () {
    return this.prompt(_promptInputNameObj).then(function (answers) {
      _name = this._getName(answers.name);
      this._promptDescription();
    }.bind(this));
  },

  _promptSelectName: function () {
    _promptSelectNameObj.choices = _manager.getNames(_categoryName);
    if(_promptSelectNameObj.choices.length > 0) {
      return this.prompt(_promptSelectNameObj).then(function (answers) {
        _names = [];
        for(var i = 0; i < answers.name.length; i++) {
          _names.push(answers.name[i]);
        }
        this._promptConfirmDelete();
      }.bind(this));
    } else {
      this.log('  No components in that category found');
      // TODO Go to previous prompt
    }
  },

  _promptInputDescription: function () {
    return this.prompt(_promptInputDescriptionObj).then(function (answers) {
      _description = answers.description;
      this._promptSelectSizes();
    }.bind(this));
  },

  _promptSelectSizes: function () {
    var sizeNames = _manager.getSizeNames();
    var choices = _helper.getInquirerPromptChoicesAsCheckboxChoices(sizeNames, true);
    _promptSelectSizesObj.choices = choices;
    return this.prompt(_promptSelectSizesObj).then(function (answers) {
      _sizeNames = answers.sizes;
      this._promptSelectModuleAction();
    }.bind(this));
  },

  _promptSelectModuleAction: function () {
    return this.prompt(_promptSelectModuleActionObj).then(function (answers) {
      _moduleAction = answers.moduleAction;
      switch(answers.moduleAction) {
        case 'Create New':
          this._promptConfirmAdd();
          break;
        case 'Use Existing':
          this._promptSelectModuleName();
          break;
        case 'None':
          this._promptConfirmAdd();
          break;
      }
    }.bind(this));
  },

  _promptSelectModuleName: function () {
    _promptSelectModuleNameObj.choices = _manager.getModuleNames();
    if(_promptSelectModuleNameObj.choices.length > 0) {
      return this.prompt(_promptSelectModuleNameObj).then(function (answers) {
        _moduleName = answers.moduleName;
        this._promptConfirmAdd();
      }.bind(this));
    } else {
      this.log('  No modules found');
      // TODO Go to previous prompt
    }
  },

  _promptConfirmAdd: function () {
    return this.prompt(_promptConfirmAddObj).then(function (answers) {
      if(answers.confirmAdd == 'Yes') {
        _manager.addComponent();
      } else {
        this.composeWith('jaywing-atomic:app');
        // TODO Go to previous prompt
      }
    }.bind(this));
  },

  _promptConfirmDelete: function () {
    return this.prompt(_promptConfirmDeleteObj).then(function (answers) {
      if(answers.confirmDelete == 'Yes') {
        for (var i = 0; i < _names.length; i++) {
          _manager.addComponent();
        }
      } else {
        this.composeWith('jaywing-atomic:app');
        // TODO Go to previous prompt
      }
    }.bind(this));
  },

  initializing: function () {
    _manager.init();
    _promptInputNameObj.validate = _validator.validateComponentName;
  },

  prompting: function () {
    this._promptSelectAction();
  }

}

module.exports = _generator.Base.extend(baseExtension);