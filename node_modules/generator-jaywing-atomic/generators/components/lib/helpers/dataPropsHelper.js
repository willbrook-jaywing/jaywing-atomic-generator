//-------------------------------------------------------
//  Library: Data Helper
//-------------------------------------------------------

var _ = require('lodash');

var _config = require('../../../components/config');

//-------------------------
//  Private
//-------------------------

//-------------------------
//  Public
//-------------------------

var self = module.exports = {

  getFormattedName: function (inputName) {
    var result = _.startCase(_.toLower(inputName));
    return result;
  },

  getFormattedSubCategoryName: function (inputName) {
    var result = _.startCase(_.toLower(inputName));
    return result;
  },

  getCssClassName: function (name) {
    var result = name.replace(/\s+/g, '');
    return result;
  },

  getSassVarPrefix: function (name) {
    var result = name.replace(/\s+/g, '-').toLowerCase();
    return result;
  },

  getSizeCssClassNames: function (name, sizeNames) {
    var results = [];
    for (var i = 0; i < sizeNames.length; i++) {
      var name = this.getCssClassName(name);
      var cssClassName = name + sizeNames[i];
      results.push(cssClassName);
    }
    return results;
  },

  getModifierCssClassSuffix: function (modifierName) {
    var strs = modifierName.toLowerCase().match(/[^\s-]+/g);
    var result = strs[0].toLowerCase();
    if(strs.length > 1){
      for(var i = 1; i < strs.length; i++) {
        result += _.upperFirst(strs[i]);
      }
    }
    return result;
  },

  getModifierCssClassName: function (name, modifierName) {
    var css = this.getCssClassName(name);
    var suffix = this.getModifierCssClassSuffix(modifierName);
    var result = css + '--' + suffix;
    return result;
  },

  getModifierCssClassNames: function (name, modifierNames) {
    var results = [];
    for (var i = 0; i < modifierNames.length; i++) {
      var modifier = this.getModifierCssClassName(name, modifierNames[i]);
      results.push(modifier);
    }
    return results;
  },

  getFullCssClassName: function (name, sizeNames, modifierNames) {
    var css = this.getCssClassName(name);
    var sizes = this.getSizeCssClassNames(name, sizeNames);
    var modifiers = this.getModifierCssClassNames(name, modifierNames);
    var result = css;
    for (var i = 0; i < sizes.length; i++) {
      result += ' ' + sizes[i];
    }
    for (var i = 0; i < modifiers.length; i++) {
      result += ' ' + modifiers[i];
    }
    return result;
  },

  getModuleClassName: function (name) {
    var result = name.replace(/\s+/g, '');
    return result;
  },

  getNameFromSassFolderName: function (folderName) {
    var strs = folderName.toLowerCase().match(/[^\s-]+/g);
    var result = '';
    for(var i = 0; i < strs.length; i++) {
      result += _.upperFirst(strs[i]) + ' ';
    }
    result = result.trim();
    return result;
  },

  getCategorySassPath: function (name) {
    var result = _config.componentData.paths.sass + name.replace(/\s+/g, '-').toLowerCase();;
    return result;
  }

};