//-------------------------------------------------------
//  Library: Data Syncer
//-------------------------------------------------------

var _fs = require('fs');

var _config = require('../../../components/config');
var _dataHelper = require('../../../components/lib/helpers/dataHelper');

//-------------------------
//  Private
//-------------------------

//-------------------------
//  Public
//-------------------------

var self = module.exports = {

  getNamesFromSassFolders: function (category) {

    var names = [];

    var path = _dataHelper.getCategorySassPath(category);
    var exists = _fs.existsSync(path);
    if(exists) {
      var readList = _fs.readdirSync(path);
      for(var i = 0; i < readList.length; i++) {
        var folderName = readList[i];
        var name = _dataHelper.getNameFromSassFolderName(folderName);
        names.push(name);
      }
    }

    return names;

  },

  getSubCategoryNamesFromSassFolders: function (category) {

    var names = [];

    // TODO TEMP
    //names = ['Cats', 'Dogs', 'Owls', 'Pigeons', 'Geese'];
    /* TODO
    var path = _config.componentData.paths.modules;
    var exists = _fs.existsSync(path);
    if(exists) {
      var readList = _fs.readdirSync(path);
      for(var i = 0; i < readList.length; i++) {
        var item = readList[i].split('.');
        var name = item[0];
        names.push(name);
      }
    }
    */

    return names;

  },

  getModuleClassNamesFromModulesFolder: function (category) {

    var names = [];

    var path = _config.componentData.paths.modules;
    var exists = _fs.existsSync(path);
    if(exists) {
      var readList = _fs.readdirSync(path);
      for(var i = 0; i < readList.length; i++) {
        var item = readList[i].split('.');
        var name = item[0];
        names.push(name);
      }
    }

    return names;

  },

  getDocsDataAsObj: function () {

    var path = _config.docsData.files.global;
    var json = _fs.readFileSync(path, 'utf8');
    var obj = JSON.parse(json);

    return obj;

  }

};