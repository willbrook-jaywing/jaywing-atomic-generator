//-------------------------------------------------------
//  Library: Data Helper
//-------------------------------------------------------

var _ = require('lodash');

var _config = require('../../data/config');

//-------------------------
//  Private
//-------------------------

//-------------------------
//  Public
//-------------------------

var self = module.exports = {

  // Prompt Objects

  getInquirerPromptChoicesAsCheckboxChoices: function (choices, checkAll) {
    var checkboxes = [];
    for(var i = 0; i < choices.length; i++) {
      var checkbox = {};
      checkbox.name = choices[i];
      checkbox.value = choices[i];
      checkbox.checked = checkAll ? true : false;
      checkboxes.push(checkbox);
    }
    return checkboxes;
  },

  getCategoryNamesFromCategoriesData: function (categories) {
    var names = [];
    for(var i = 0; i < categories.length; i++) {
      names.push(categories[i].name);
    }
    return names;
  },

  // String Conversions

  getFormattedName: function (name) {
    var strs = name.toLowerCase().match(/[^\s-]+/g);
    var name = '';
    for(var i = 0; i < strs.length; i++) {
      name += _.upperFirst(strs[i]) + ' ';
    }
    name = name.trim();
    return name;
  },

  getSizeNamesFromSizesData: function (sizes) {
    var names = [];
    for(var i = 0; i < sizes.length; i++) {
      names.push(sizes[i].name);
    }
    return names;
  },

  getCssClassNameFromName: function (name) {
    var cssClassName = name.replace(/\s+/g, '');
    return cssClassName;
  },

  getSizeCssClassNamesFromNameSizeNames: function (name, sizeNames) {
    var sizeCssClassNames = [];
    for (var i = 0; i < sizeNames.length; i++) {
      var cssClassName = this.getCssClassNameFromName(name);
      var sizeCssClassName = cssClassName + sizeNames[i];
      sizeCssClassNames.push(sizeCssClassName);
    }
    return sizeCssClassNames;
  },

  getModuleClassNameFromName: function (name) {
    var moduleName = name.replace(/\s+/g, '');
    return moduleName;
  },

  // File Paths

  getNameFromSassFolderName: function (folderName) {
    var strs = folderName.toLowerCase().match(/[^\s-]+/g);
    var result = '';
    for(var i = 0; i < strs.length; i++) {
      result += _.upperFirst(strs[i]) + ' ';
    }
    result = result.trim();
    return result;
  },

  getCategorySassPathFromCategoryName: function (name) {
    var path = _config.componentData.paths.sass + name.replace(/\s+/g, '-').toLowerCase();;
    return path;
  }

};