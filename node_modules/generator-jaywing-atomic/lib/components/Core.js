//-------------------------------------------------------
//  Library: Data Manager
//-------------------------------------------------------

var _config = require('../../config');
var _DataHelper = require('../../lib/components/DataHelper');
var _DocsDataHelper = require('../../lib/components/DocsDataHelper');
var _FileMiner = require('../../lib/components/FileMiner');
var _FileManager = require('../../lib/components/FileManager');

//-------------------------
//  Private
//-------------------------

var _data = null;

//-------------------------
//  Public
//-------------------------

var self = module.exports = {

  init: function (generator) {

    _data = {};
    _FileManager.init(generator);

  },

  getCategoryNames: function () {
    var names = _DataHelper.extractDataCategoryNames(_config.components.categories);
    return names;
  },

  getSubCategoryNames: function (categoryName) {

    var names = [];

    // Find the corresponding category in the data
    if(categoryName == 'Core'){
      var categories = _config.components.categories;
      for (var i = 0; i < categories.length; i++) {
        if(categories[i].name == categoryName) {
          var category = categories[i];
          names = _DataHelper.extractDataSubCategoryNames(category);
          break;
        }
      }
    } else {
      names = _FileMiner.getSubCategoryNamesFromSassFolders(categoryName);
    }

    return names;

  },

  getNames: function (categoryName, subCategoryName) {
    var names = _FileMiner.getNamesFromSassFolders(categoryName, subCategoryName);
    return names;
  },

  getSizeNames: function () {
    var names = _DataHelper.extractDataSizeNames(_config.components.sizes);
    return names;
  },

  getModuleClassNames: function () {
    var names = _FileMiner.getModuleClassNamesFromModulesFolder();
    return names;
  },

  addDefinition: function (categoryName, subCategoryName, name, description, sizeNames, moduleClassName) {

    var data = _DataHelper.createDefinitionDataObj(categoryName, subCategoryName, name, description, sizeNames, moduleClassName);

    _FileManager.addDefinitionToDocsData(data);
    _FileManager.addDefinitionHtmlFiles(data);
    _FileManager.addDefinitionNotesFiles(data);
    _FileManager.addDefinitionSassFiles(data);
    if(moduleClassName) _FileManager.addDefinitionModuleFiles(data);

  },

  addModifier(categoryName, subCategoryName, name, modifierName, modifierDescription) {

    var data = _DataHelper.createModifierDataObj(categoryName, subCategoryName, name, modifierName, modifierDescription);
  
    _FileManager.addModifierHtmlFiles(data);
    _FileManager.addModifierNotesFiles(data);
    _FileManager.addModifierSassFiles(data);

  },

  delete: function (categoryName, name) {

  }

};